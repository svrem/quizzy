// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: quizzy.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// All possible game event types
type GameEventType int32

const (
	GameEventType_QUESTION           GameEventType = 0
	GameEventType_START_ANSWER_PHASE GameEventType = 1
	GameEventType_SHOW_ANSWER        GameEventType = 2
	GameEventType_UPDATE_USER_STATS  GameEventType = 3
	GameEventType_CATEGORY_SELECTION GameEventType = 4
	GameEventType_CATEGORY_VOTES     GameEventType = 5
)

// Enum value maps for GameEventType.
var (
	GameEventType_name = map[int32]string{
		0: "QUESTION",
		1: "START_ANSWER_PHASE",
		2: "SHOW_ANSWER",
		3: "UPDATE_USER_STATS",
		4: "CATEGORY_SELECTION",
		5: "CATEGORY_VOTES",
	}
	GameEventType_value = map[string]int32{
		"QUESTION":           0,
		"START_ANSWER_PHASE": 1,
		"SHOW_ANSWER":        2,
		"UPDATE_USER_STATS":  3,
		"CATEGORY_SELECTION": 4,
		"CATEGORY_VOTES":     5,
	}
)

func (x GameEventType) Enum() *GameEventType {
	p := new(GameEventType)
	*p = x
	return p
}

func (x GameEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_quizzy_proto_enumTypes[0].Descriptor()
}

func (GameEventType) Type() protoreflect.EnumType {
	return &file_quizzy_proto_enumTypes[0]
}

func (x GameEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameEventType.Descriptor instead.
func (GameEventType) EnumDescriptor() ([]byte, []int) {
	return file_quizzy_proto_rawDescGZIP(), []int{0}
}

// Main GameEvent message
type GameEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  GameEventType          `protobuf:"varint,1,opt,name=type,proto3,enum=quizzy.GameEventType" json:"type,omitempty"`
	// Types that are valid to be assigned to EventData:
	//
	//	*GameEvent_Question
	//	*GameEvent_AnswerPhase
	//	*GameEvent_UpdateUserStats
	//	*GameEvent_ShowAnswer
	//	*GameEvent_CategorySelection
	//	*GameEvent_CategoryVotes
	EventData     isGameEvent_EventData `protobuf_oneof:"event_data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameEvent) Reset() {
	*x = GameEvent{}
	mi := &file_quizzy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent) ProtoMessage() {}

func (x *GameEvent) ProtoReflect() protoreflect.Message {
	mi := &file_quizzy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent.ProtoReflect.Descriptor instead.
func (*GameEvent) Descriptor() ([]byte, []int) {
	return file_quizzy_proto_rawDescGZIP(), []int{0}
}

func (x *GameEvent) GetType() GameEventType {
	if x != nil {
		return x.Type
	}
	return GameEventType_QUESTION
}

func (x *GameEvent) GetEventData() isGameEvent_EventData {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *GameEvent) GetQuestion() *QuestionData {
	if x != nil {
		if x, ok := x.EventData.(*GameEvent_Question); ok {
			return x.Question
		}
	}
	return nil
}

func (x *GameEvent) GetAnswerPhase() *AnswerPhaseData {
	if x != nil {
		if x, ok := x.EventData.(*GameEvent_AnswerPhase); ok {
			return x.AnswerPhase
		}
	}
	return nil
}

func (x *GameEvent) GetUpdateUserStats() *UpdateUserStatsData {
	if x != nil {
		if x, ok := x.EventData.(*GameEvent_UpdateUserStats); ok {
			return x.UpdateUserStats
		}
	}
	return nil
}

func (x *GameEvent) GetShowAnswer() *CorrectAnswerData {
	if x != nil {
		if x, ok := x.EventData.(*GameEvent_ShowAnswer); ok {
			return x.ShowAnswer
		}
	}
	return nil
}

func (x *GameEvent) GetCategorySelection() *CategorySelectionData {
	if x != nil {
		if x, ok := x.EventData.(*GameEvent_CategorySelection); ok {
			return x.CategorySelection
		}
	}
	return nil
}

func (x *GameEvent) GetCategoryVotes() *CategoryVotesData {
	if x != nil {
		if x, ok := x.EventData.(*GameEvent_CategoryVotes); ok {
			return x.CategoryVotes
		}
	}
	return nil
}

type isGameEvent_EventData interface {
	isGameEvent_EventData()
}

type GameEvent_Question struct {
	Question *QuestionData `protobuf:"bytes,2,opt,name=question,proto3,oneof"`
}

type GameEvent_AnswerPhase struct {
	AnswerPhase *AnswerPhaseData `protobuf:"bytes,3,opt,name=answer_phase,json=answerPhase,proto3,oneof"`
}

type GameEvent_UpdateUserStats struct {
	UpdateUserStats *UpdateUserStatsData `protobuf:"bytes,4,opt,name=update_user_stats,json=updateUserStats,proto3,oneof"`
}

type GameEvent_ShowAnswer struct {
	ShowAnswer *CorrectAnswerData `protobuf:"bytes,5,opt,name=show_answer,json=showAnswer,proto3,oneof"`
}

type GameEvent_CategorySelection struct {
	CategorySelection *CategorySelectionData `protobuf:"bytes,6,opt,name=category_selection,json=categorySelection,proto3,oneof"`
}

type GameEvent_CategoryVotes struct {
	CategoryVotes *CategoryVotesData `protobuf:"bytes,7,opt,name=category_votes,json=categoryVotes,proto3,oneof"` // Optionally add user stats, etc.
}

func (*GameEvent_Question) isGameEvent_EventData() {}

func (*GameEvent_AnswerPhase) isGameEvent_EventData() {}

func (*GameEvent_UpdateUserStats) isGameEvent_EventData() {}

func (*GameEvent_ShowAnswer) isGameEvent_EventData() {}

func (*GameEvent_CategorySelection) isGameEvent_EventData() {}

func (*GameEvent_CategoryVotes) isGameEvent_EventData() {}

// Basic question structure for use during gameplay
type QuestionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      string                 `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Difficulty    string                 `protobuf:"bytes,2,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Category      string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	EndTime       int64                  `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionData) Reset() {
	*x = QuestionData{}
	mi := &file_quizzy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionData) ProtoMessage() {}

func (x *QuestionData) ProtoReflect() protoreflect.Message {
	mi := &file_quizzy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionData.ProtoReflect.Descriptor instead.
func (*QuestionData) Descriptor() ([]byte, []int) {
	return file_quizzy_proto_rawDescGZIP(), []int{1}
}

func (x *QuestionData) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *QuestionData) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *QuestionData) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *QuestionData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

// Represents the answer phase (users selecting answers)
type AnswerPhaseData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AnswerShownAt int64                  `protobuf:"varint,1,opt,name=answer_shown_at,json=answerShownAt,proto3" json:"answer_shown_at,omitempty"`
	Duration      int32                  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Answers       []string               `protobuf:"bytes,3,rep,name=answers,proto3" json:"answers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnswerPhaseData) Reset() {
	*x = AnswerPhaseData{}
	mi := &file_quizzy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerPhaseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerPhaseData) ProtoMessage() {}

func (x *AnswerPhaseData) ProtoReflect() protoreflect.Message {
	mi := &file_quizzy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerPhaseData.ProtoReflect.Descriptor instead.
func (*AnswerPhaseData) Descriptor() ([]byte, []int) {
	return file_quizzy_proto_rawDescGZIP(), []int{2}
}

func (x *AnswerPhaseData) GetAnswerShownAt() int64 {
	if x != nil {
		return x.AnswerShownAt
	}
	return 0
}

func (x *AnswerPhaseData) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *AnswerPhaseData) GetAnswers() []string {
	if x != nil {
		return x.Answers
	}
	return nil
}

// Shows the correct answer and percentages
type CorrectAnswerData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Correct       int32                  `protobuf:"varint,1,opt,name=correct,proto3" json:"correct,omitempty"`
	Percentages   []float32              `protobuf:"fixed32,2,rep,packed,name=percentages,proto3" json:"percentages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CorrectAnswerData) Reset() {
	*x = CorrectAnswerData{}
	mi := &file_quizzy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CorrectAnswerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CorrectAnswerData) ProtoMessage() {}

func (x *CorrectAnswerData) ProtoReflect() protoreflect.Message {
	mi := &file_quizzy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CorrectAnswerData.ProtoReflect.Descriptor instead.
func (*CorrectAnswerData) Descriptor() ([]byte, []int) {
	return file_quizzy_proto_rawDescGZIP(), []int{3}
}

func (x *CorrectAnswerData) GetCorrect() int32 {
	if x != nil {
		return x.Correct
	}
	return 0
}

func (x *CorrectAnswerData) GetPercentages() []float32 {
	if x != nil {
		return x.Percentages
	}
	return nil
}

// When the user must select a category
type CategorySelectionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Categories    []string               `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	EndTime       int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Duration      int32                  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CategorySelectionData) Reset() {
	*x = CategorySelectionData{}
	mi := &file_quizzy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategorySelectionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategorySelectionData) ProtoMessage() {}

func (x *CategorySelectionData) ProtoReflect() protoreflect.Message {
	mi := &file_quizzy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategorySelectionData.ProtoReflect.Descriptor instead.
func (*CategorySelectionData) Descriptor() ([]byte, []int) {
	return file_quizzy_proto_rawDescGZIP(), []int{4}
}

func (x *CategorySelectionData) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *CategorySelectionData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *CategorySelectionData) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// Result of voting on a category
type CategoryVotesData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	VotePercentages  []float32              `protobuf:"fixed32,1,rep,packed,name=vote_percentages,json=votePercentages,proto3" json:"vote_percentages,omitempty"`
	SelectedCategory int32                  `protobuf:"varint,2,opt,name=selected_category,json=selectedCategory,proto3" json:"selected_category,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CategoryVotesData) Reset() {
	*x = CategoryVotesData{}
	mi := &file_quizzy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryVotesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryVotesData) ProtoMessage() {}

func (x *CategoryVotesData) ProtoReflect() protoreflect.Message {
	mi := &file_quizzy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryVotesData.ProtoReflect.Descriptor instead.
func (*CategoryVotesData) Descriptor() ([]byte, []int) {
	return file_quizzy_proto_rawDescGZIP(), []int{5}
}

func (x *CategoryVotesData) GetVotePercentages() []float32 {
	if x != nil {
		return x.VotePercentages
	}
	return nil
}

func (x *CategoryVotesData) GetSelectedCategory() int32 {
	if x != nil {
		return x.SelectedCategory
	}
	return 0
}

// User statistics for the game
type UpdateUserStatsData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Streak        int32                  `protobuf:"varint,1,opt,name=streak,proto3" json:"streak,omitempty"`
	Score         int32                  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserStatsData) Reset() {
	*x = UpdateUserStatsData{}
	mi := &file_quizzy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserStatsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserStatsData) ProtoMessage() {}

func (x *UpdateUserStatsData) ProtoReflect() protoreflect.Message {
	mi := &file_quizzy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserStatsData.ProtoReflect.Descriptor instead.
func (*UpdateUserStatsData) Descriptor() ([]byte, []int) {
	return file_quizzy_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateUserStatsData) GetStreak() int32 {
	if x != nil {
		return x.Streak
	}
	return 0
}

func (x *UpdateUserStatsData) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

var File_quizzy_proto protoreflect.FileDescriptor

const file_quizzy_proto_rawDesc = "" +
	"\n" +
	"\fquizzy.proto\x12\x06quizzy\"\xd3\x03\n" +
	"\tGameEvent\x12)\n" +
	"\x04type\x18\x01 \x01(\x0e2\x15.quizzy.GameEventTypeR\x04type\x122\n" +
	"\bquestion\x18\x02 \x01(\v2\x14.quizzy.QuestionDataH\x00R\bquestion\x12<\n" +
	"\fanswer_phase\x18\x03 \x01(\v2\x17.quizzy.AnswerPhaseDataH\x00R\vanswerPhase\x12I\n" +
	"\x11update_user_stats\x18\x04 \x01(\v2\x1b.quizzy.UpdateUserStatsDataH\x00R\x0fupdateUserStats\x12<\n" +
	"\vshow_answer\x18\x05 \x01(\v2\x19.quizzy.CorrectAnswerDataH\x00R\n" +
	"showAnswer\x12N\n" +
	"\x12category_selection\x18\x06 \x01(\v2\x1d.quizzy.CategorySelectionDataH\x00R\x11categorySelection\x12B\n" +
	"\x0ecategory_votes\x18\a \x01(\v2\x19.quizzy.CategoryVotesDataH\x00R\rcategoryVotesB\f\n" +
	"\n" +
	"event_data\"\x81\x01\n" +
	"\fQuestionData\x12\x1a\n" +
	"\bquestion\x18\x01 \x01(\tR\bquestion\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x02 \x01(\tR\n" +
	"difficulty\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12\x19\n" +
	"\bend_time\x18\x04 \x01(\x03R\aendTime\"o\n" +
	"\x0fAnswerPhaseData\x12&\n" +
	"\x0fanswer_shown_at\x18\x01 \x01(\x03R\ranswerShownAt\x12\x1a\n" +
	"\bduration\x18\x02 \x01(\x05R\bduration\x12\x18\n" +
	"\aanswers\x18\x03 \x03(\tR\aanswers\"O\n" +
	"\x11CorrectAnswerData\x12\x18\n" +
	"\acorrect\x18\x01 \x01(\x05R\acorrect\x12 \n" +
	"\vpercentages\x18\x02 \x03(\x02R\vpercentages\"n\n" +
	"\x15CategorySelectionData\x12\x1e\n" +
	"\n" +
	"categories\x18\x01 \x03(\tR\n" +
	"categories\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\x03R\aendTime\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x05R\bduration\"k\n" +
	"\x11CategoryVotesData\x12)\n" +
	"\x10vote_percentages\x18\x01 \x03(\x02R\x0fvotePercentages\x12+\n" +
	"\x11selected_category\x18\x02 \x01(\x05R\x10selectedCategory\"C\n" +
	"\x13UpdateUserStatsData\x12\x16\n" +
	"\x06streak\x18\x01 \x01(\x05R\x06streak\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x05R\x05score*\x89\x01\n" +
	"\rGameEventType\x12\f\n" +
	"\bQUESTION\x10\x00\x12\x16\n" +
	"\x12START_ANSWER_PHASE\x10\x01\x12\x0f\n" +
	"\vSHOW_ANSWER\x10\x02\x12\x15\n" +
	"\x11UPDATE_USER_STATS\x10\x03\x12\x16\n" +
	"\x12CATEGORY_SELECTION\x10\x04\x12\x12\n" +
	"\x0eCATEGORY_VOTES\x10\x05B+Z)github.com/svrem/quizzy/internal/protocolb\x06proto3"

var (
	file_quizzy_proto_rawDescOnce sync.Once
	file_quizzy_proto_rawDescData []byte
)

func file_quizzy_proto_rawDescGZIP() []byte {
	file_quizzy_proto_rawDescOnce.Do(func() {
		file_quizzy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_quizzy_proto_rawDesc), len(file_quizzy_proto_rawDesc)))
	})
	return file_quizzy_proto_rawDescData
}

var file_quizzy_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_quizzy_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_quizzy_proto_goTypes = []any{
	(GameEventType)(0),            // 0: quizzy.GameEventType
	(*GameEvent)(nil),             // 1: quizzy.GameEvent
	(*QuestionData)(nil),          // 2: quizzy.QuestionData
	(*AnswerPhaseData)(nil),       // 3: quizzy.AnswerPhaseData
	(*CorrectAnswerData)(nil),     // 4: quizzy.CorrectAnswerData
	(*CategorySelectionData)(nil), // 5: quizzy.CategorySelectionData
	(*CategoryVotesData)(nil),     // 6: quizzy.CategoryVotesData
	(*UpdateUserStatsData)(nil),   // 7: quizzy.UpdateUserStatsData
}
var file_quizzy_proto_depIdxs = []int32{
	0, // 0: quizzy.GameEvent.type:type_name -> quizzy.GameEventType
	2, // 1: quizzy.GameEvent.question:type_name -> quizzy.QuestionData
	3, // 2: quizzy.GameEvent.answer_phase:type_name -> quizzy.AnswerPhaseData
	7, // 3: quizzy.GameEvent.update_user_stats:type_name -> quizzy.UpdateUserStatsData
	4, // 4: quizzy.GameEvent.show_answer:type_name -> quizzy.CorrectAnswerData
	5, // 5: quizzy.GameEvent.category_selection:type_name -> quizzy.CategorySelectionData
	6, // 6: quizzy.GameEvent.category_votes:type_name -> quizzy.CategoryVotesData
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_quizzy_proto_init() }
func file_quizzy_proto_init() {
	if File_quizzy_proto != nil {
		return
	}
	file_quizzy_proto_msgTypes[0].OneofWrappers = []any{
		(*GameEvent_Question)(nil),
		(*GameEvent_AnswerPhase)(nil),
		(*GameEvent_UpdateUserStats)(nil),
		(*GameEvent_ShowAnswer)(nil),
		(*GameEvent_CategorySelection)(nil),
		(*GameEvent_CategoryVotes)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_quizzy_proto_rawDesc), len(file_quizzy_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_quizzy_proto_goTypes,
		DependencyIndexes: file_quizzy_proto_depIdxs,
		EnumInfos:         file_quizzy_proto_enumTypes,
		MessageInfos:      file_quizzy_proto_msgTypes,
	}.Build()
	File_quizzy_proto = out.File
	file_quizzy_proto_goTypes = nil
	file_quizzy_proto_depIdxs = nil
}
